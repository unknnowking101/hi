<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snake Game</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #030303;
    }
    canvas {
      border: 1px solid #ffffff;
    }
  </style>
</head>
<body>
  <canvas id="snakeCanvas" width="400" height="400"></canvas>
  <script>
    // Snake Game Logic
    const canvas = document.getElementById("snakeCanvas");
    const ctx = canvas.getContext("2d");

    // Snake properties
    const snakeSize = 20;
    let snake = [{ x: 0, y: 0 }];
    let direction = "right";

    // Food properties
    let food = { x: 0, y: 0 };

    // Background music
    const backgroundMusic = new Audio('YNW-Melly---Murder-On-My-Mind.mp3');
    backgroundMusic.loop = true;
    backgroundMusic.volume = 0.5; // Adjust volume as needed

    // Initialize the game
    function init() {
      createFood();
      backgroundMusic.play();
      gameLoop();
    }

    // Game loop
    function gameLoop() {
      clearCanvas();
      moveSnake();
      drawSnake();
      drawFood();

      // Check for collisions
      if (checkCollision()) {
        gameOver();
        return;
      }

      // Check if snake ate the food
      if (snake[0].x === food.x && snake[0].y === food.y) {
        snake.push({ x: 0, y: 0 });
        createFood();
      }

      setTimeout(gameLoop, 200); // Adjust the speed of the game
    }

    // Handle keyboard input
    document.addEventListener("keydown", handleKeyPress);

    function handleKeyPress(e) {
      switch (e.key) {
        case "ArrowUp":
          direction = "up";
          break;
        case "ArrowDown":
          direction = "down";
          break;
        case "ArrowLeft":
          direction = "left";
          break;
        case "ArrowRight":
          direction = "right";
          break;
      }
    }

    // Move the snake
    function moveSnake() {
      const head = { ...snake[0] };

      switch (direction) {
        case "up":
          head.y -= snakeSize;
          break;
        case "down":
          head.y += snakeSize;
          break;
        case "left":
          head.x -= snakeSize;
          break;
        case "right":
          head.x += snakeSize;
          break;
      }

      // Add the new head to the front of the snake
      snake.unshift(head);

      // Remove the tail
      if (snake.length > 1) {
        snake.pop();
      }
    }

    // Draw the snake on the canvas
    function drawSnake() {
      ctx.fillStyle = "#00f";
      snake.forEach(segment => {
        ctx.fillRect(segment.x, segment.y, snakeSize, snakeSize);
      });
    }

    // Create food at a random position
    function createFood() {
      food = {
        x: Math.floor(Math.random() * canvas.width / snakeSize) * snakeSize,
        y: Math.floor(Math.random() * canvas.height / snakeSize) * snakeSize
      };
    }

    // Draw the food on the canvas
    function drawFood() {
      ctx.fillStyle = "#f00";
      ctx.fillRect(food.x, food.y, snakeSize, snakeSize);
    }

    // Check for collisions with walls or self
    function checkCollision() {
      const head = snake[0];

      // Check for collision with walls
      if (
        head.x < 0 ||
        head.x >= canvas.width ||
        head.y < 0 ||
        head.y >= canvas.height
      ) {
        return true;
      }

      // Check for collision with self
      for (let i = 1; i < snake.length; i++) {
        if (head.x === snake[i].x && head.y === snake[i].y) {
          return true;
        }
      }

      return false;
    }

    // Handle game over
    function gameOver() {
      backgroundMusic.pause();
      alert("Game Over!");
      snake = [{ x: 0, y: 0 }];
      direction = "right";
      createFood();
      backgroundMusic.play();
      gameLoop();
    }

    // Clear the canvas
    function clearCanvas() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    // Start the game
    init();
  </script>
</body>
</html>
